When would you want to use a remote repository rather than keeping all your work
local?

    When I'm working in a team with other developers or
    when I'm working solo but on different computers or
    when I want to publish my source code or
    when I want to have a back up of my project or
    anything that I do not remember right now. ;)


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    One reason might be the following (just as an simple example):
    I'm working on a file. A teammate works on the same file.
    If Git would automaticly update then this may cause a lot of trouble.
    Although this is not the best example, since I and my team may have worked
    sensible and have created branches, automatic updating would distort your
    overview, since it would "mess around" while you may be concentrated
    on completing some task.


Describe the differences between forks, clones, and branches. When would you
use one instead of another?

    - Branches are located inside of a repository.
      They are used for so many reasons, which I wrote down so often...
      e.g. when implementing a experimental feature, while still wanting to
      have a working code to compile.

    - Clones are exact copies of a repository - from a remote repository to a
      local repository or from a local repository to another local repository.
      You use them for example to "download" a project from GitHib to your
      computer in your office and later to the computer at your home office.
      Another exaple is a new team members that uses clones to start
      working on and contributing to the project.

    - Forks are clones on a remote repository, which have a backlink to the
      original one. This is not a feature of Git but GitHub (or GitLab,
      Bitbucket and similar services).
      This is for example used for open source sofware project which split up
      into different groups with different opinions of what the sofware should
      exactly look like (e.g. think of the many different linux distributions).


What is the benefit of having a copy of the last known state of the remote
stored locally?

    First of all, it is simply necessary to be able to know if something has
    changed on the remote side while you were working on the local side.
    Further it enables merging changes and detect what merging style has to
    be done ("fast forward" or "normal").
    It it also usefull to recall what you have changed since the last pull
    request (which may be spread over more than one commit) by usinging
    "git diff origin/master master" (of course master could also be another
    branch here).


How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here


When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
